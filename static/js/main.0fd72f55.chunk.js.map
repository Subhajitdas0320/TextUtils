{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","Link","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","role","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","About","myStyle","data-bs-parent","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Router","cls","document","body","Routes","Route","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0fd72f55.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {/* <div className=\"d-flex\">\r\n            <div className=\"bg-primary rounded mx-2\" onClick = {()=>{props.toggleMode('primary')}} style = {{height: \"30px\", width: \"30px\", cursor: \"pointer\"}}></div>\r\n            <div className=\"bg-danger rounded mx-2\" onClick = {()=>{props.toggleMode('danger')}} style = {{height: \"30px\", width: \"30px\", cursor: \"pointer\"}}></div>\r\n            <div className=\"bg-success rounded mx-2\" onClick = {()=>{props.toggleMode('success')}} style = {{height: \"30px\", width: \"30px\", cursor: \"pointer\"}}></div>\r\n            <div className=\"bg-warning rounded mx-2\" onClick = {()=>{props.toggleMode('warning')}} style = {{height: \"30px\", width: \"30px\", cursor: \"pointer\"}}></div>\r\n          </div> */}\r\n          <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick = {()=>{props.toggleMode(null)}}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              aria-checked=\"false\" \r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              Toggle Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n}; //isRequired is used to compulsarily set the prop or else it will give a error\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, {useState} from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        /* console.log(\"Uppercase was clicked\" + text); */\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\", \"success\");\r\n    }\r\n    const handleDownClick = ()=>{\r\n        /* console.log(\"Uppercase was clicked\" + text); */\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\", \"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        /* console.log(\"On change\"); */\r\n        setText(event.target.value);\r\n    }\r\n    const handleOnClear = ()=>{\r\n      setText(\"\");\r\n      props.showAlert(\"Text cleared\", \"success\");\r\n    }\r\n    const copyText = ()=>{\r\n      navigator.clipboard.writeText(text)\r\n      props.showAlert(\"Copied to clipboard\", \"success\");\r\n    }\r\n    const handleExtraSpaces = ()=>{\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"Extra spaces removed\", \"success\");\r\n    }\r\n    const [text, setText] = useState('');\r\n    //setText(\"NewText\"); //To change the text\r\n  return (\r\n    <>\r\n    <div className=\"container\" style = {{color : props.mode === \"dark\" ? \"white\" : \"#062655\"}}>\r\n       <h1 className=\"mb-4\">{props.heading}</h1> \r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value = {text}\r\n        onChange={handleOnChange} style = {{backgroundColor : props.mode === \"dark\" ? \"#13466e\" : \"white\", color : props.mode === \"dark\" ? \"white\" : \"#062655\"}} id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button disabled = {text.length === 0} className= \"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n      <button disabled = {text.length === 0} className= \"btn btn-primary mx-1 my-1\" onClick={handleDownClick}>Convert to Lowercase</button>\r\n      <button disabled = {text.length === 0} className= \"btn btn-primary mx-1 my-1\" onClick={handleOnClear}>Clear</button>\r\n      <button disabled = {text.length === 0} className= \"btn btn-primary mx-1 my-1\" onClick={copyText}>Copy</button>\r\n      <button disabled = {text.length === 0} className= \"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    </div>\r\n    <div className=\"container my-3\" style = {{color : props.mode === \"dark\" ? \"white\" : \"#062655\"}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(/\\s + /).filter((element)=>{return element.length !== 0}).length} words, {text.length} characters</p>\r\n        <p>{0.008 * text.split(/\\s + /).filter((element)=>{return element.length !== 0}).length} minutes used</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Nothing to preview!\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style = {{height : '50px'}}>\r\n      {props.alert && <div>\r\n       <div\r\n    className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n      </div>\r\n    </div>}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n    /* const[myStyle, setMyStyle]= useState(\r\n    {\r\n        color : \"black\",\r\n        backgroundColor : \"white\",\r\n    }) */\r\n    let myStyle = {\r\n      color : props.mode === 'dark' ? 'white' : 'black',\r\n      backgroundColor : props.mode === 'dark' ? 'rgb(36 74 104)' : 'white',\r\n    }\r\n  return (\r\n    <div className=\"container\" style={{color : props.mode === 'dark' ? 'white' : 'black',}}>\r\n      <h1 className=\"my-3\">About Us</h1>\r\n      <div>\r\n        <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                style={myStyle}\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n              >\r\n                <strong>Analyze Your text</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>This is the first item's accordion body.</strong> It is\r\n                shown by default, until the collapse plugin adds the appropriate\r\n                classes that we use to style each element. These classes control\r\n                the overall appearance, as well as the showing and hiding via\r\n                CSS transitions. You can modify any of this with custom CSS or\r\n                overriding our default variables. It's also worth noting that\r\n                just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                style={myStyle}\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n              >\r\n                <strong>Free to use</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>This is the second item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classes that we use to style each element. These\r\n                classes control the overall appearance, as well as the showing\r\n                and hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                style={myStyle}\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n              >\r\n                <strong>Browser Compatible</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>This is the third item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classes that we use to style each element. These\r\n                classes control the overall appearance, as well as the showing\r\n                and hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport { BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  /* const removeBodyClasses= ()=>{\n    document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-success')\n    document.body.classList.remove('bg-warning')\n    document.body.classList.remove('bg-danger')\n  } */\n\n  const toggleMode = (cls) => {\n    /* removeBodyClasses();\n    document.body.classList.add('bg-'+ cls) */\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#062655\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Routes>\n            <Route exact path=\"/about\" element={<About mode = {mode}/>} />\n            <Route\n              exact\n              path=\"/\"\n              element={\n                <TextForm\n                  heading=\"Try TextUtils - Word Counter, Character Counter, Remove extra spaces\"\n                  showAlert={showAlert} mode = {mode}\n                />\n              }\n            />\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}